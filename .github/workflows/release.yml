name: Release package
on:
  workflow_dispatch:
    inputs:
      release-type:
        description: 'Release type (one of): patch, minor, major, prepatch, preminor, premajor, prerelease'
        required: true
        default: prerelease
        options:
          - patch
          - minor
          - major
          - prepatch
          - preminor
          - premajor
          - prerelease
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
        - name: Checkout
          uses: actions/checkout@v4

        - uses: pnpm/action-setup@v4
          name: Install pnpm
          with:
            version: 9.5.0
            run_install: false

        - name: Install Node.js
          uses: actions/setup-node@v4
          with:
            node-version: 20
            cache: 'pnpm'

        - name: Get pnpm store directory
          shell: bash
          run: |
            echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

        - uses: actions/cache@v4
          name: Setup pnpm cache
          with:
            path: ${{ env.STORE_PATH }}
            key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
            restore-keys: |
                ${{ runner.os }}-pnpm-store-

        - name: Install dependencies
          run: pnpm install

          # Configure Git
        - name: Git configuration
          run: |
              git config --global user.email "wesgro+github-actions[bot]@users.noreply.github.com"
              git config --global user.name "GitHub Actions"

        # Bump package version
        # Use tag latest
        - name: Bump release version
          if: startsWith(github.event.inputs.release-type, 'pre') != true
          run: |
              echo "NEW_VERSION=$(npm --no-git-tag-version version $RELEASE_TYPE)" >> $GITHUB_ENV
              echo "RELEASE_TAG=latest" >> $GITHUB_ENV
          env:
             RELEASE_TYPE: ${{ github.event.inputs.release-type }}

        # Bump package pre-release version
        # Use tag beta for pre-release versions
        - name: Bump pre-release version
          if: startsWith(github.event.inputs.release-type, 'pre')
          run: |
              echo "NEW_VERSION=$(npm --no-git-tag-version --preid=beta version $RELEASE_TYPE)" >> $GITHUB_ENV
              echo "RELEASE_TAG=beta" >> $GITHUB_ENV
          env:
            RELEASE_TYPE: ${{ github.event.inputs.release-type }}

        # Commit changes
        - name: Commit package.json changes and create tag
          run: |
              git add "package.json"
              git commit -m "chore: release ${{ env.NEW_VERSION }}"
              git tag ${{ env.NEW_VERSION }}

        # Publish version to public repository
        - name: Publish
          run: npm publish --verbose --access public --tag ${{ env.RELEASE_TAG }}
          env:
            NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

        # Push repository changes
        - name: Push changes to repository
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: |
              git push origin && git push --tags